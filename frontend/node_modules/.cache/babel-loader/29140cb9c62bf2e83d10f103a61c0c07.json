{"ast":null,"code":"import axios from \"axios\";\nimport config from \"@/config/index.js\";\nimport TitleStructure from \"../../components/GlobalComponent/TitleStructure.vue\"; // import EditInforAccount from \"../../components/Admin/ManageAccount/EditInforAccount.vue\";\n\nimport CreateAccount from \"../../components/Ministry/ManageSpell/CreateSpell.vue\";\nimport Header from \"../../components/Header/Header.vue\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"AdminManage\",\n  components: {\n    Header,\n    TitleStructure\n  },\n\n  data() {\n    return {\n      accountStudent: [],\n      accountTeacher: [],\n      accountCompany: [],\n      accounts: [],\n      accountUpdate: {}\n    };\n  } // computed: mapGetters({ accountCurrent: \"getAccountCurrent\" }),\n  // mounted() {\n  //     document.querySelectorAll(\".type__item\")[0].classList.add(\"active\");\n  //     const typeItems = document.querySelectorAll(\".type__item\");\n  //     [...typeItems].forEach(function (typeItem) {\n  //         typeItem.addEventListener(\"click\", handleBorderItem);\n  //     });\n  //     function handleBorderItem(event) {\n  //         [...typeItems].forEach((typeItem) => {\n  //             typeItem.classList.remove(\"active\");\n  //         });\n  //         event.target.classList.add(\"active\");\n  //     }\n  // },\n  // async created() {\n  //     const token = localStorage.getItem(\"token\");\n  //     const response = await axios.get(\n  //         `${config.domain}/admin/get-all-account`,\n  //         {\n  //             headers: {\n  //                 Authorization: \"Bearer \" + token,\n  //             },\n  //         }\n  //     );\n  //     this.accounts = response.data.result;\n  //     this.$store.commit(\"SET_ACCOUNT_CURRENT\", response.data.result);\n  // },\n  // methods: {\n  //     handleFilter(event) {\n  //         const filter = event.target.id;\n  //         if (filter == \"teacher\") {\n  //             this.$store.commit(\n  //                 \"SET_ACCOUNT_CURRENT\",\n  //                 this.accounts.filter((account) => account.rule == \"TEACHER\")\n  //             );\n  //         } else if (filter == \"student\") {\n  //             this.$store.commit(\n  //                 \"SET_ACCOUNT_CURRENT\",\n  //                 this.accounts.filter((account) => account.rule == \"STUDENT\")\n  //             );\n  //         } else if (filter == \"company\") {\n  //             this.$store.commit(\n  //                 \"SET_ACCOUNT_CURRENT\",\n  //                 this.accounts.filter((account) => account.rule == \"COMPANY\")\n  //             );\n  //         } else if (filter == \"all\") {\n  //             this.$store.commit(\"SET_ACCOUNT_CURRENT\", this.accounts);\n  //         }\n  //     },\n  //     async handleDeleteAccount(accountId) {\n  //         const token = localStorage.getItem(\"token\");\n  //         const res = await axios.delete(\n  //             `${config.domain}/admin/delete-account`,\n  //             {\n  //                 headers: { Authorization: \"Bearer \" + token },\n  //                 data: {\n  //                     accountId,\n  //                 },\n  //             }\n  //         );\n  //         this.$store.commit(\"SET_TOAST\", {\n  //             message: res.data.message,\n  //             isSuccess: res.data.status,\n  //         });\n  //         if (res.data.status) {\n  //             this.$store.commit(\"DELETE_ACCOUNT_CURRENT\", accountId);\n  //         }\n  //     },\n  //     handleSetUpdate(account) {\n  //         this.$store.commit(\"SET_ACCOUNT_UPDATE\", account);\n  //     },\n  // },\n\n\n};","map":{"version":3,"mappings":"AAyFA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,qDAA3B,C,CACA;;AACA,OAAOC,aAAP,MAA0B,uDAA1B;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,eAAe;EACXC,IAAI,EAAE,aADK;EAEXC,UAAU,EAAE;IAAEH,MAAF;IAAUF;EAAV,CAFD;;EAIXM,IAAI,GAAG;IACH,OAAO;MACHC,cAAc,EAAE,EADb;MAEHC,cAAc,EAAE,EAFb;MAGHC,cAAc,EAAE,EAHb;MAIHC,QAAQ,EAAE,EAJP;MAKHC,aAAa,EAAE;IALZ,CAAP;EAOH,CAZU,CAaX;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;;AA7FW,CAAf","names":["axios","config","TitleStructure","CreateAccount","Header","mapGetters","name","components","data","accountStudent","accountTeacher","accountCompany","accounts","accountUpdate"],"sourceRoot":"","sources":["D:\\SV5T\\frontend\\src\\views\\ministry\\SpellManage.vue"],"sourcesContent":["<template>\r\n    <Header/>\r\n    <div>\r\n        <div class=\"admin-manage animate__animated animate__fadeIn\">\r\n            <TitleStructure :title=\"`Danh sách đợt đăng ký sinh viên 5 tốt`\"></TitleStructure>\r\n            <!-- <div class=\"type-account col-12 d-flex justify-content-center\">\r\n                <div class=\"type__item\" id=\"all\" >\r\n                    Tất cả tài khoản\r\n                </div>\r\n                <div class=\"type__item\" id=\"teacher\" >\r\n                    Tài khoản giảng viên\r\n                </div>\r\n                <div class=\"type__item\" id=\"student\" >\r\n                    Tài khoản sinh viên\r\n                </div>\r\n            </div> -->\r\n            <div\r\n                class=\"list-account mt-5 table-wrapper-scroll-y my-custom-scrollbar\"\r\n            >\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th class=\"text-center\" scope=\"col\">#</th>\r\n                            <th class=\"text-center\" scope=\"col\">Mã đợt</th>\r\n                            <th class=\"text-center\" scope=\"col\">\r\n                                Tên đợt\r\n                            </th>\r\n                            <th class=\"text-center\" scope=\"col\">Ngày bắt đầu </th>\r\n                            <th class=\"text-center\" scope=\"col\">\r\n                                Ngày kết thúc\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <!-- <tr\r\n                            v-for=\"(account, index) in accountCurrent\"\r\n                            :key=\"index\"\r\n                        >\r\n                            <th class=\"text-center\" scope=\"row\">\r\n                                {{ index + 1 }}\r\n                            </th>\r\n                            <td class=\"text-center\">{{ account.username }}</td>\r\n                            <td class=\"text-center\">{{ account.name }}</td>\r\n                            <td class=\"text-center\">{{ account.rule }}</td>\r\n                            <td class=\"text-center\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn\"\r\n                                    data-bs-toggle=\"modal\"\r\n                                    data-bs-target=\"#editInforAccount\"\r\n                                    @click=\"handleSetUpdate(account)\"\r\n                                >\r\n                                    <i\r\n                                        class=\"bi bi-pencil-square text-warning fs-5\"\r\n                                    ></i>\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn\"\r\n                                    @click=\"handleDeleteAccount(account._id)\"\r\n                                >\r\n                                    <i\r\n                                        class=\"bi bi-archive-fill text-danger fs-5\"\r\n                                    ></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr> -->\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"d-flex justify-content-center mt-3\">\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-success\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#createAccount\"\r\n            >\r\n                <i class=\"bi bi-plus-circle-fill\"></i> &nbsp; Thêm đợt\r\n            </button>\r\n        </div>\r\n        <!-- <EditInforAccount></EditInforAccount> -->\r\n\r\n        <CreateSpell></CreateSpell>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport config from \"@/config/index.js\";\r\nimport TitleStructure from \"../../components/GlobalComponent/TitleStructure.vue\";\r\n// import EditInforAccount from \"../../components/Admin/ManageAccount/EditInforAccount.vue\";\r\nimport CreateAccount from \"../../components/Ministry/ManageSpell/CreateSpell.vue\";\r\nimport Header from \"../../components/Header/Header.vue\"\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n    name: \"AdminManage\",\r\n    components: { Header, TitleStructure  },\r\n\r\n    data() {\r\n        return {\r\n            accountStudent: [],\r\n            accountTeacher: [],\r\n            accountCompany: [],\r\n            accounts: [],\r\n            accountUpdate: {},\r\n        };\r\n    },\r\n    // computed: mapGetters({ accountCurrent: \"getAccountCurrent\" }),\r\n    // mounted() {\r\n    //     document.querySelectorAll(\".type__item\")[0].classList.add(\"active\");\r\n\r\n    //     const typeItems = document.querySelectorAll(\".type__item\");\r\n\r\n    //     [...typeItems].forEach(function (typeItem) {\r\n    //         typeItem.addEventListener(\"click\", handleBorderItem);\r\n    //     });\r\n\r\n    //     function handleBorderItem(event) {\r\n    //         [...typeItems].forEach((typeItem) => {\r\n    //             typeItem.classList.remove(\"active\");\r\n    //         });\r\n    //         event.target.classList.add(\"active\");\r\n    //     }\r\n    // },\r\n    // async created() {\r\n    //     const token = localStorage.getItem(\"token\");\r\n    //     const response = await axios.get(\r\n    //         `${config.domain}/admin/get-all-account`,\r\n    //         {\r\n    //             headers: {\r\n    //                 Authorization: \"Bearer \" + token,\r\n    //             },\r\n    //         }\r\n    //     );\r\n\r\n    //     this.accounts = response.data.result;\r\n\r\n    //     this.$store.commit(\"SET_ACCOUNT_CURRENT\", response.data.result);\r\n    // },\r\n    // methods: {\r\n    //     handleFilter(event) {\r\n    //         const filter = event.target.id;\r\n    //         if (filter == \"teacher\") {\r\n    //             this.$store.commit(\r\n    //                 \"SET_ACCOUNT_CURRENT\",\r\n    //                 this.accounts.filter((account) => account.rule == \"TEACHER\")\r\n    //             );\r\n    //         } else if (filter == \"student\") {\r\n    //             this.$store.commit(\r\n    //                 \"SET_ACCOUNT_CURRENT\",\r\n    //                 this.accounts.filter((account) => account.rule == \"STUDENT\")\r\n    //             );\r\n    //         } else if (filter == \"company\") {\r\n    //             this.$store.commit(\r\n    //                 \"SET_ACCOUNT_CURRENT\",\r\n    //                 this.accounts.filter((account) => account.rule == \"COMPANY\")\r\n    //             );\r\n    //         } else if (filter == \"all\") {\r\n    //             this.$store.commit(\"SET_ACCOUNT_CURRENT\", this.accounts);\r\n    //         }\r\n    //     },\r\n    //     async handleDeleteAccount(accountId) {\r\n    //         const token = localStorage.getItem(\"token\");\r\n    //         const res = await axios.delete(\r\n    //             `${config.domain}/admin/delete-account`,\r\n    //             {\r\n    //                 headers: { Authorization: \"Bearer \" + token },\r\n\r\n    //                 data: {\r\n    //                     accountId,\r\n    //                 },\r\n    //             }\r\n    //         );\r\n\r\n    //         this.$store.commit(\"SET_TOAST\", {\r\n    //             message: res.data.message,\r\n    //             isSuccess: res.data.status,\r\n    //         });\r\n\r\n    //         if (res.data.status) {\r\n    //             this.$store.commit(\"DELETE_ACCOUNT_CURRENT\", accountId);\r\n    //         }\r\n    //     },\r\n\r\n    //     handleSetUpdate(account) {\r\n    //         this.$store.commit(\"SET_ACCOUNT_UPDATE\", account);\r\n    //     },\r\n    // },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.type__item {\r\n    padding: 5px 10px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    border-bottom: 2px solid rgba(64, 68, 162, 0.25);\r\n}\r\n\r\n.type__item.active {\r\n    transition: border-bottom 0.5s linear;\r\n    border-bottom-color: #2f2fe6;\r\n}\r\n\r\n.my-custom-scrollbar {\r\n    position: relative;\r\n    height: 400px;\r\n    overflow: auto;\r\n}\r\n.table-wrapper-scroll-y {\r\n    display: block;\r\n}\r\n</style>\r\n                        \r\n"]},"metadata":{},"sourceType":"module"}