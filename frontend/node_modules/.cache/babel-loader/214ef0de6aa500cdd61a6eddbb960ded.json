{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../../../config/index.js\";\nconst StudentModule = {\n  state: {\n    studentInfor: {} // companyInfor: {},\n    // progressInfor: [],\n    // companyAssess: {},\n    // teacherAssess: {},\n\n  },\n  getters: {\n    getStudentInfor(state) {\n      return state.studentInfor;\n    } // getCompanyInfor(state) {\n    //     return state.companyInfor;\n    // },\n    // getProgressInfor(state) {\n    //     return state.progressInfor;\n    // },\n    // getCompanyAssess(state) {\n    //     return state.companyAssess;\n    // },\n    // getTeacherAssess(state) {\n    //     return state.teacherAssess;\n    // },\n\n\n  },\n  mutations: {\n    SET_STUDENT_INFOR(state, studentInfor) {\n      state.studentInfor = studentInfor;\n    } // SET_COMPANY_INFOR(state, companyInfor) {\n    //     state.companyInfor = companyInfor;\n    // },\n    // SET_PROGRESS_INFOR(state, progressInfor) {\n    //     state.progressInfor = progressInfor;\n    // },\n    // SET_COMPANY_ASSESS(state, companyAssess) {\n    //     state.companyAssess = companyAssess;\n    // },\n    // SET_TEACHER_ASSESS(state, teacherAssess) {\n    //     state.teacherAssess = teacherAssess;\n    // },\n\n\n  },\n  actions: {\n    async setStudentInfor({\n      commit\n    }, payload) {\n      const token = localStorage.getItem(\"token\"); // Lay thong tin thuc tap cua sinh vien.\n\n      const response = await axios.get(`${config.domain}/student/get-student-infor`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        },\n        params: {\n          studentId: payload.id\n        }\n      }); // Thay doi dinh dang ngay  bat dau thuc tap!\n      // let startDate = response.data.result.startDate;\n      // response.data.result.startDate =\n      //     startDate === 0\n      //         ? 0\n      //         : new Date(startDate).toLocaleDateString(\"en-GB\");\n\n      commit(\"SET_STUDENT_INFOR\", response.data.result);\n    } // async setCompanyInfor({ commit }, payload) {\n    //     const token = localStorage.getItem(\"token\");\n    //     // Lay thong tin thuc tap cua sinh vien!\n    //     const responseStudent = await axios.get(\n    //         `${config.domain}/${payload.rule}/get-student-infor`,\n    //         {\n    //             headers: { Authorization: \"Bearer \" + token },\n    //             params: { studentId: payload.id },\n    //         }\n    //     );\n    //     // Lay thong tin don vi thuc tap!\n    //     const companyId = responseStudent.data.result.companyId;\n    //     if (companyId) {\n    //         const response = await axios.get(\n    //             `${config.domain}/${payload.rule}/get-company-infor`,\n    //             {\n    //                 headers: { Authorization: \"Bearer \" + token },\n    //                 params: { companyId: companyId },\n    //             }\n    //         );\n    //         commit(\"SET_COMPANY_INFOR\", response.data.result);\n    //     }\n    // },\n    // async setProgressInfor({ commit }, payload) {\n    //     const token = localStorage.getItem(\"token\");\n    //     // Lay thong tin phan cong cong viec\n    //     const response = await axios.get(\n    //         `${config.domain}/${payload.rule}/get-all-task`,\n    //         {\n    //             headers: { Authorization: \"Bearer \" + token },\n    //             params: { studentId: payload.id },\n    //         }\n    //     );\n    //     // Thay doi dinh dang thoi gian hoan thanh cong viec\n    //     response.data.result.forEach((task) => {\n    //         task.time = new Date(task.time).toLocaleDateString(\"en-GB\");\n    //     });\n    //     commit(\"SET_PROGRESS_INFOR\", response.data.result);\n    // },\n    // async setCompanyAssess({ commit }, payload) {\n    //     const token = localStorage.getItem(\"token\");\n    //     // Lay thong tin danh gia cua don vi thuc tap!\n    //     const response = await axios.get(\n    //         `${config.domain}/${payload.rule}/get-company-assess`,\n    //         {\n    //             headers: { Authorization: \"Bearer \" + token },\n    //             params: { studentId: payload.id },\n    //         }\n    //     );\n    //     if (!response.data.result) {\n    //         commit(\"SET_COMPANY_ASSESS\", { points: [] });\n    //     } else commit(\"SET_COMPANY_ASSESS\", response.data.result);\n    // },\n    // async setTeacherAssess({ commit }, payload) {\n    //     const token = localStorage.getItem(\"token\");\n    //     // Lay thong tin danh gia cua giang vien\n    //     const response = await axios.get(\n    //         `${config.domain}/${payload.rule}/get-assess`,\n    //         {\n    //             headers: { Authorization: \"Bearer \" + token },\n    //             params: { studentId: payload.id },\n    //         }\n    //     );\n    //     commit(\"SET_TEACHER_ASSESS\", response.data.points);\n    // },\n\n\n  }\n};\nexport default StudentModule;","map":{"version":3,"names":["axios","config","StudentModule","state","studentInfor","getters","getStudentInfor","mutations","SET_STUDENT_INFOR","actions","setStudentInfor","commit","payload","token","localStorage","getItem","response","get","domain","headers","Authorization","params","studentId","id","data","result"],"sources":["D:/SV5T/frontend/src/store/modules/student-module/index.js"],"sourcesContent":["import axios from \"axios\";\r\nimport config from \"../../../config/index.js\";\r\n\r\nconst StudentModule = {\r\n    state: {\r\n        studentInfor: {},\r\n        // companyInfor: {},\r\n        // progressInfor: [],\r\n        // companyAssess: {},\r\n        // teacherAssess: {},\r\n    },\r\n    getters: {\r\n        getStudentInfor(state) {\r\n            return state.studentInfor;\r\n        },\r\n        // getCompanyInfor(state) {\r\n        //     return state.companyInfor;\r\n        // },\r\n        // getProgressInfor(state) {\r\n        //     return state.progressInfor;\r\n        // },\r\n        // getCompanyAssess(state) {\r\n        //     return state.companyAssess;\r\n        // },\r\n        // getTeacherAssess(state) {\r\n        //     return state.teacherAssess;\r\n        // },\r\n    },\r\n    mutations: {\r\n        SET_STUDENT_INFOR(state, studentInfor) {\r\n            state.studentInfor = studentInfor;\r\n        },\r\n        // SET_COMPANY_INFOR(state, companyInfor) {\r\n        //     state.companyInfor = companyInfor;\r\n        // },\r\n        // SET_PROGRESS_INFOR(state, progressInfor) {\r\n        //     state.progressInfor = progressInfor;\r\n        // },\r\n        // SET_COMPANY_ASSESS(state, companyAssess) {\r\n        //     state.companyAssess = companyAssess;\r\n        // },\r\n        // SET_TEACHER_ASSESS(state, teacherAssess) {\r\n        //     state.teacherAssess = teacherAssess;\r\n        // },\r\n    },\r\n    actions: {\r\n        async setStudentInfor({ commit }, payload) {\r\n            const token = localStorage.getItem(\"token\");\r\n\r\n            // Lay thong tin thuc tap cua sinh vien.\r\n            const response = await axios.get(\r\n                `${config.domain}/student/get-student-infor`,\r\n                {\r\n                    headers: { Authorization: \"Bearer \" + token },\r\n                    params: { studentId: payload.id },\r\n                }\r\n            );\r\n\r\n            // Thay doi dinh dang ngay  bat dau thuc tap!\r\n            // let startDate = response.data.result.startDate;\r\n            // response.data.result.startDate =\r\n            //     startDate === 0\r\n            //         ? 0\r\n            //         : new Date(startDate).toLocaleDateString(\"en-GB\");\r\n            commit(\"SET_STUDENT_INFOR\", response.data.result);\r\n        },\r\n\r\n        // async setCompanyInfor({ commit }, payload) {\r\n        //     const token = localStorage.getItem(\"token\");\r\n\r\n        //     // Lay thong tin thuc tap cua sinh vien!\r\n        //     const responseStudent = await axios.get(\r\n        //         `${config.domain}/${payload.rule}/get-student-infor`,\r\n        //         {\r\n        //             headers: { Authorization: \"Bearer \" + token },\r\n        //             params: { studentId: payload.id },\r\n        //         }\r\n        //     );\r\n\r\n        //     // Lay thong tin don vi thuc tap!\r\n        //     const companyId = responseStudent.data.result.companyId;\r\n        //     if (companyId) {\r\n        //         const response = await axios.get(\r\n        //             `${config.domain}/${payload.rule}/get-company-infor`,\r\n        //             {\r\n        //                 headers: { Authorization: \"Bearer \" + token },\r\n        //                 params: { companyId: companyId },\r\n        //             }\r\n        //         );\r\n        //         commit(\"SET_COMPANY_INFOR\", response.data.result);\r\n        //     }\r\n        // },\r\n\r\n        // async setProgressInfor({ commit }, payload) {\r\n        //     const token = localStorage.getItem(\"token\");\r\n\r\n        //     // Lay thong tin phan cong cong viec\r\n        //     const response = await axios.get(\r\n        //         `${config.domain}/${payload.rule}/get-all-task`,\r\n        //         {\r\n        //             headers: { Authorization: \"Bearer \" + token },\r\n        //             params: { studentId: payload.id },\r\n        //         }\r\n        //     );\r\n\r\n        //     // Thay doi dinh dang thoi gian hoan thanh cong viec\r\n        //     response.data.result.forEach((task) => {\r\n        //         task.time = new Date(task.time).toLocaleDateString(\"en-GB\");\r\n        //     });\r\n        //     commit(\"SET_PROGRESS_INFOR\", response.data.result);\r\n        // },\r\n\r\n        // async setCompanyAssess({ commit }, payload) {\r\n        //     const token = localStorage.getItem(\"token\");\r\n\r\n        //     // Lay thong tin danh gia cua don vi thuc tap!\r\n        //     const response = await axios.get(\r\n        //         `${config.domain}/${payload.rule}/get-company-assess`,\r\n        //         {\r\n        //             headers: { Authorization: \"Bearer \" + token },\r\n        //             params: { studentId: payload.id },\r\n        //         }\r\n        //     );\r\n        //     if (!response.data.result) {\r\n        //         commit(\"SET_COMPANY_ASSESS\", { points: [] });\r\n        //     } else commit(\"SET_COMPANY_ASSESS\", response.data.result);\r\n        // },\r\n\r\n        // async setTeacherAssess({ commit }, payload) {\r\n        //     const token = localStorage.getItem(\"token\");\r\n\r\n        //     // Lay thong tin danh gia cua giang vien\r\n        //     const response = await axios.get(\r\n        //         `${config.domain}/${payload.rule}/get-assess`,\r\n        //         {\r\n        //             headers: { Authorization: \"Bearer \" + token },\r\n        //             params: { studentId: payload.id },\r\n        //         }\r\n        //     );\r\n        //     commit(\"SET_TEACHER_ASSESS\", response.data.points);\r\n        // },\r\n    },\r\n};\r\n\r\nexport default StudentModule;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE;IACHC,YAAY,EAAE,EADX,CAEH;IACA;IACA;IACA;;EALG,CADW;EAQlBC,OAAO,EAAE;IACLC,eAAe,CAACH,KAAD,EAAQ;MACnB,OAAOA,KAAK,CAACC,YAAb;IACH,CAHI,CAIL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EAfK,CARS;EAyBlBG,SAAS,EAAE;IACPC,iBAAiB,CAACL,KAAD,EAAQC,YAAR,EAAsB;MACnCD,KAAK,CAACC,YAAN,GAAqBA,YAArB;IACH,CAHM,CAIP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EAfO,CAzBO;EA0ClBK,OAAO,EAAE;IACL,MAAMC,eAAN,CAAsB;MAAEC;IAAF,CAAtB,EAAkCC,OAAlC,EAA2C;MACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CADuC,CAGvC;;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAClB,GAAEhB,MAAM,CAACiB,MAAO,4BADE,EAEnB;QACIC,OAAO,EAAE;UAAEC,aAAa,EAAE,YAAYP;QAA7B,CADb;QAEIQ,MAAM,EAAE;UAAEC,SAAS,EAAEV,OAAO,CAACW;QAArB;MAFZ,CAFmB,CAAvB,CAJuC,CAYvC;MACA;MACA;MACA;MACA;MACA;;MACAZ,MAAM,CAAC,mBAAD,EAAsBK,QAAQ,CAACQ,IAAT,CAAcC,MAApC,CAAN;IACH,CApBI,CAsBL;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EA/FK;AA1CS,CAAtB;AA6IA,eAAevB,aAAf"},"metadata":{},"sourceType":"module"}