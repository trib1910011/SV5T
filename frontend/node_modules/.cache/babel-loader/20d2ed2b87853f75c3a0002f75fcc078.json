{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport InforTeacher from \"@/components/GlobalComponent/InforTeacher.vue\";\nimport TitleStructure from \"@/components/GlobalComponent/TitleStructure.vue\";\nimport ViewDetail from \"@/components/Student/Form/ViewDetail.vue\";\nimport ViewStandard from \"@/components/Teacher/ViewStandard.vue\";\nimport axios from \"axios\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"FormManage\",\n  components: {\n    InforTeacher,\n    TitleStructure,\n    ViewDetail,\n    ViewStandard\n  },\n\n  data() {\n    return {\n      spell: [],\n      empty_check: \"\",\n      form: [],\n      passData: {},\n      allocate: []\n    };\n  },\n\n  created() {\n    this.showSpell(), this.showForm();\n  },\n\n  computed: { ...mapGetters({\n      st: \"getAccount\"\n    })\n  },\n  methods: {\n    async showSpell() {\n      const data = await axios.get(\"http://localhost:3000/spell/get-all-spell\");\n      const arr_data = data.data.findSpell;\n      const arr_result = arr_data.map((item, index) => {\n        return {\n          id: item._id,\n          stt: index + 1,\n          spellname: item.spellname,\n          name: item.name,\n          start: item.start,\n          end: item.end,\n          allocate: item.allocate,\n          status: item.status ? 'Bắt đầu' : 'Kết thúc'\n        };\n      });\n      var count_empty = 0;\n      arr_result.forEach(item => {\n        if (item.status === \"Kết thúc\") {\n          count_empty++;\n        }\n      });\n\n      if (count_empty === arr_result.length) {\n        this.empty_check = \"CHƯA CÓ THỜI GIAN ĐĂNG KÝ ĐỢT MỚI\";\n      }\n\n      this.spell = arr_result;\n    },\n\n    async showForm() {\n      const token = localStorage.getItem(\"token\");\n      const data1 = await axios.get(\"http://localhost:3000/teacher/get-form\", {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      });\n      const data_form = data1.data.arr;\n      const arr_spell_name = [];\n      const arrAllocate = this.spell.map(item => {\n        console.log(item);\n        arr_spell_name.push(item.name);\n        return item.allocate;\n      });\n      let checkSpellname = [];\n\n      for (let i = 0; i < arrAllocate.length; i++) {\n        console.log(arrAllocate[i].includes(this.st.name));\n\n        if (arrAllocate[i].includes(this.st.name)) {\n          checkSpellname.push(arr_spell_name[i]);\n        }\n      }\n\n      console.log(checkSpellname);\n      let arr_form = [];\n      data_form.forEach((item, index) => {\n        if (checkSpellname.includes(item.spellname)) {\n          return {\n            stt: index + 1,\n            id: item._id,\n            username: item.studentId.username,\n            name: item.studentId.name,\n            major: item.major,\n            course: item.course,\n            drl: item.drl,\n            gpa: item.gpa,\n            result: item.result,\n            spellname: item.spellname,\n            standard: item.standard,\n            created: item.createdAt\n          };\n        }\n      });\n\n      if (arr_form.length == 0) {\n        arr_form = [];\n      }\n\n      this.form = arr_form;\n    },\n\n    async viewDetail(id_input, st_id) {\n      const token = localStorage.getItem(\"token\");\n      await axios.get(`http://localhost:3000/teacher/get-form-id/${id_input}`, {\n        headers: {\n          Authorization: \"Bearer \" + token\n        }\n      }).then(data => {\n        const ob = {\n          id_teacher: st_id,\n          data: data.data.findForm\n        };\n        localStorage.setItem('view_detail_form', JSON.stringify(ob));\n        this.passData = data.data.findForm;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    async viewDetail1(id_input) {\n      await axios.get(`http://localhost:3000/spell/get-spell-id/${id_input}`, {}).then(data => {\n        const ob = {\n          data: data.data.findSpell\n        };\n        localStorage.setItem('view_detail_form', JSON.stringify(ob));\n        this.passData = data.data.findSpell;\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["InforTeacher","TitleStructure","ViewDetail","ViewStandard","axios","mapGetters","name","components","data","spell","empty_check","form","passData","allocate","created","showSpell","showForm","computed","st","methods","get","arr_data","findSpell","arr_result","map","item","index","id","_id","stt","spellname","start","end","status","count_empty","forEach","length","token","localStorage","getItem","data1","headers","Authorization","data_form","arr","arr_spell_name","arrAllocate","console","log","push","checkSpellname","i","includes","arr_form","username","studentId","major","course","drl","gpa","result","standard","createdAt","viewDetail","id_input","st_id","then","ob","id_teacher","findForm","setItem","JSON","stringify","catch","e","viewDetail1"],"sourceRoot":"","sources":["D:\\SV5T\\frontend\\src\\views\\teacher\\FormManage.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-12 d-flex\">\r\n        <TitleStructure :title=\"`Thông tin giảng viên`\" class=\"col-6 me-4\"></TitleStructure>\r\n        <TitleStructure :title=\"`Thông báo đợt xét duyệt sinh viên 5 tốt`\" class=\"col\"></TitleStructure>\r\n\r\n    </div>\r\n    <div class=\"d-flex\">\r\n        <InforTeacher></InforTeacher>\r\n        <div class=\"mx-5\" style=\"width: 100%\">\r\n            <div v-if=\"empty_check !== ''\">\r\n                <h5 style=\"color: red;width: 100%;text-align: center;\">{{ this.empty_check }}</h5>\r\n            </div>\r\n            <div v-else>\r\n                <div v-for=\"(item, index) in spell\" :key=\"index\">\r\n                    <div v-if=\"item.status == 'Bắt đầu'\">\r\n                        <p><span style=\"font-weight: bold;\"><i class=\"bi bi-bell\"> </i> Thông báo đăng ký:</span> {{\r\n                            item.name }}</p>\r\n                        <p style=\"margin-left: 20px;\"><span style=\"font-weight: bold;\">Từ ngày:</span> {{ item.start }}</p>\r\n                        <p style=\"margin-left: 20px;\"><span style=\"font-weight: bold;\">Đến ngày:</span> {{ item.end }}</p>\r\n                        <p style=\"margin-left: 20px;\"><button type=\"button\" class=\"btn btn-outline-primary p-2\"\r\n                                data-bs-toggle=\"modal\" data-bs-target=\"#ViewStandard\" @click=\"viewDetail1(item.id)\"><i\r\n                                    class=\"bi bi-eye-fill\"></i> Tiêu chí đánh giá</button></p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <TitleStructure :title=\"`Danh sách sinh viên đăng ký`\"></TitleStructure>\r\n    <div class=\"mt-2 table-wrapper-scroll-y my-custom-scrollbar\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"text-center\" scope=\"col\">#</th>\r\n                    <th class=\"text-center\" scope=\"col\">Đợt</th>\r\n                    <th class=\"text-center\" scope=\"col\">Mã đơn</th>\r\n                    <th class=\"text-center\" scope=\"col\">\r\n                        Mã số sinh viên\r\n                    </th>\r\n                    <th class=\"text-center\" scope=\"col\">Họ tên sinh viên</th>\r\n                    <th class=\"text-center\" scope=\"col\">\r\n                        Ngành\r\n                    </th>\r\n                    <th class=\"text-center\" scope=\"col\">\r\n                        Khóa\r\n                    </th>\r\n                    <th class=\"text-center\" scope=\"col\">Ngày đăng ký</th>\r\n                    <th class=\"text-center\" scope=\"col\">Chi tiết đơn</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in form\" :key=\"index\">\r\n                    <th class=\"text-center\" scope=\"row\">\r\n                        {{ item.stt }}\r\n                    </th>\r\n                    <td class=\"text-center\">{{ item.spellname }}</td>\r\n                    <td class=\"text-center\">{{ item.id }}</td>\r\n                    <td class=\"text-center\">{{ item.username }}</td>\r\n                    <td class=\"text-center\">{{ item.name }}</td>\r\n                    <td class=\"text-center\">{{ item.major }}</td>\r\n                    <td class=\"text-center\">{{ item.course }}</td>\r\n                    <td class=\"text-center\">{{ `${new Date(item.created).getHours().toString().padStart(2, '0')}:${new\r\n                        Date(item.created).getMinutes().toString().padStart(2, '0')} ${item.created.toString().slice(0,\r\n                            10)}` }}</td>\r\n                    <td class=\"text-center\"><button type=\"button\" class=\"btn btn-outline-success p-2\" data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#ViewDetailModal\" @click=\"viewDetail(item.id, st.id)\"><i\r\n                                class=\"bi bi-eye-fill\"></i> Xem chi tiết</button></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <ViewDetail v-bind:dataParent=\"passData\"></ViewDetail>\r\n    <ViewStandard v-bind:dataParent=\"passData\"></ViewStandard>\r\n</template>\r\n\r\n<script>\r\nimport InforTeacher from \"@/components/GlobalComponent/InforTeacher.vue\";\r\nimport TitleStructure from \"@/components/GlobalComponent/TitleStructure.vue\";\r\nimport ViewDetail from \"@/components/Student/Form/ViewDetail.vue\";\r\nimport ViewStandard from \"@/components/Teacher/ViewStandard.vue\"\r\nimport axios from \"axios\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n    name: \"FormManage\",\r\n    components: { InforTeacher, TitleStructure, ViewDetail, ViewStandard },\r\n    data() {\r\n        return {\r\n            spell: [],\r\n            empty_check: \"\",\r\n            form: [],\r\n            passData: {},\r\n            allocate: []\r\n        };\r\n    },\r\n    created() {\r\n        this.showSpell(),\r\n            this.showForm()\r\n    },\r\n    computed: {\r\n        ...mapGetters({ st: \"getAccount\" }),\r\n    },\r\n    methods: {\r\n        async showSpell() {\r\n            const data = await axios.get(\"http://localhost:3000/spell/get-all-spell\")\r\n\r\n            const arr_data = data.data.findSpell;\r\n\r\n            const arr_result = arr_data.map((item, index) => {\r\n\r\n                return {\r\n                    id: item._id,\r\n                    stt: index + 1,\r\n                    spellname: item.spellname,\r\n                    name: item.name,\r\n                    start: item.start,\r\n                    end: item.end,\r\n                    allocate: item.allocate,\r\n                    status: item.status ? 'Bắt đầu' : 'Kết thúc'\r\n                }\r\n            })\r\n            var count_empty = 0\r\n            arr_result.forEach((item) => {\r\n                if (item.status === \"Kết thúc\") {\r\n                    count_empty++;\r\n                }\r\n            })\r\n\r\n            if (count_empty === arr_result.length) {\r\n                this.empty_check = \"CHƯA CÓ THỜI GIAN ĐĂNG KÝ ĐỢT MỚI\"\r\n            }\r\n\r\n            this.spell = arr_result;\r\n        },\r\n        async showForm() {\r\n            const token = localStorage.getItem(\"token\");\r\n            const data1 = await axios.get(\"http://localhost:3000/teacher/get-form\", {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                }\r\n            })\r\n\r\n            const data_form = data1.data.arr\r\n\r\n            const arr_spell_name = []\r\n\r\n            const arrAllocate = this.spell.map((item) => {\r\n                console.log(item)\r\n                arr_spell_name.push(item.name)\r\n                return item.allocate\r\n            })\r\n\r\n\r\n\r\n            let checkSpellname = []\r\n            for (let i = 0; i < arrAllocate.length; i++) {\r\n                console.log(arrAllocate[i].includes(this.st.name))\r\n                if (arrAllocate[i].includes(this.st.name)) {\r\n                    checkSpellname.push(arr_spell_name[i])\r\n                }\r\n            }\r\n\r\n            console.log(checkSpellname)\r\n\r\n\r\n            let arr_form = []\r\n\r\n            \r\n\r\n           data_form.forEach((item, index) => {\r\n                if (checkSpellname.includes(item.spellname)) {\r\n                    return {\r\n                        stt: index + 1,\r\n                        id: item._id,\r\n                        username: item.studentId.username,\r\n                        name: item.studentId.name,\r\n                        major: item.major,\r\n                        course: item.course,\r\n                        drl: item.drl,\r\n                        gpa: item.gpa,\r\n                        result: item.result,\r\n                        spellname: item.spellname,\r\n                        standard: item.standard,\r\n                        created: item.createdAt\r\n                    }\r\n                }\r\n\r\n            })\r\n\r\n            if(arr_form.length == 0){\r\n                arr_form = []\r\n            }\r\n            this.form = arr_form;\r\n        },\r\n        async viewDetail(id_input, st_id) {\r\n            const token = localStorage.getItem(\"token\");\r\n\r\n            await axios.get(`http://localhost:3000/teacher/get-form-id/${id_input}`, {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                }\r\n            }).then((data) => {\r\n                const ob = {\r\n                    id_teacher: st_id,\r\n                    data: data.data.findForm\r\n                }\r\n                localStorage.setItem('view_detail_form', JSON.stringify(ob))\r\n                this.passData = data.data.findForm\r\n            }).catch((e) => {\r\n                console.log(e)\r\n            })\r\n\r\n        },\r\n        async viewDetail1(id_input) {\r\n            await axios.get(`http://localhost:3000/spell/get-spell-id/${id_input}`, {\r\n            }).then((data) => {\r\n                const ob = {\r\n                    data: data.data.findSpell\r\n                }\r\n                localStorage.setItem('view_detail_form', JSON.stringify(ob))\r\n                this.passData = data.data.findSpell\r\n            }).catch((e) => {\r\n                console.log(e)\r\n            })\r\n\r\n        },\r\n\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.my-custom-scrollbar {\r\n    position: relative;\r\n    height: 300px;\r\n    overflow: auto;\r\n}\r\n\r\n.table-wrapper-scroll-y {\r\n    display: block;\r\n}</style>\r\n                        \r\n"]},"metadata":{},"sourceType":"module"}